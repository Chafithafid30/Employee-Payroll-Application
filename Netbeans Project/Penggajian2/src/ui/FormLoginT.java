/* Form Login
*/
package ui;
import javax.swing.*;
import java.sql.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Color;
import java.awt.event.KeyEvent;

public class FormLoginT extends javax.swing.JFrame {
    String user="root"; 
    String pwd=""; 
    String url="jdbc:mysql://localhost:3306/penggajiandb"; 
    private Dimension screensize;
    Boolean login;
    String status;
    
    /**
     * Creates new form FormLogin
     */
    public FormLoginT() {
        initComponents();
        data();
        screensize = Toolkit.getDefaultToolkit().getScreenSize(); 
        setLocation((screensize.width / 2) - (getSize().width / 2), (screensize.height / 2) - (getSize().height / 2));
    }
    
    //Method
    void data(){
        FormMenuT menu = new FormMenuT();
        try {       
            Connection con = DriverManager.getConnection(url,user,pwd);  
            Statement stt = con.createStatement();     
            String sql = "SELECT nama, id_jabatan FROM karyawan WHERE id_user='"+userTF.getText()+"'";   
            ResultSet res = stt.executeQuery(sql);           
            while(res.next()){          
            Object[] ob = new Object[2];      
            ob[0]= res.getString(1);          
            ob[1]= res.getString(2);
            menu.getId_user().setText((String) ob[1]);
        }         
        res.close(); stt.close();     
        } catch (Exception e) {         
            System.out.println(e.getMessage());    
        }
        
    }
    void login(){
        try { 
            Connection conn = DriverManager.getConnection(url, user, pwd); 
            Statement st = (Statement) conn.createStatement(); 
            ResultSet rs = st.executeQuery("SELECT * FROM pengguna WHERE id_user='"+userTF.getText().trim()+"' and kata_sandi='"+passTF.getText().trim()+"'"); 
            login = rs.last();    
            if(login) {
                if(cekStatus().equals("Admin")) {
                    String nama = rs.getString("nama");
                    JOptionPane.showMessageDialog(this, "Selamat datang, "+nama+".","Welcome",JOptionPane.INFORMATION_MESSAGE);
                    this.dispose(); 
                    FormMenuT menu = new FormMenuT(); 
                    menu.setLocationRelativeTo(null); 
                    menu.setVisible(true);
                    menu.getStatus().setText("admin,");
                    menu.getNm_user().setText(rs.getString("nama"));
                    menu.getId_user().setText("ID: "+rs.getString("id_user"));
                }else if(cekStatus().equals("User")) {
                    String nama = rs.getString("nama");
                    JOptionPane.showMessageDialog(this, "Selamat datang, "+nama+".","Welcome",JOptionPane.INFORMATION_MESSAGE);
                    this.dispose(); 
                    FormMenuT menu = new FormMenuT(); 
                    menu.setLocationRelativeTo(null); 
                    menu.setVisible(true);
                    menu.getStatus().setText("user,");
                    menu.getNm_user().setText(rs.getString("nama"));
                    menu.getId_user().setText("ID: "+rs.getString("id_user"));
                    menu.getEuserBT().setEnabled(false);
                    menu.getEjabatanBT().setEnabled(false);
                    menu.getEkaryawanBT().setEnabled(false);
                }
            }
            else { 
                JOptionPane.showMessageDialog(this, "User tidak ditemukan","Informasi",JOptionPane.INFORMATION_MESSAGE);
            }
            } catch (SQLException e) { 
                System.out.println("Koneksi Gagal " + e.toString()); 
        }
    }
    
    private String cekStatus(){
        try { 
            Connection conn = DriverManager.getConnection(url, user, pwd); 
            Statement st = (Statement) conn.createStatement(); 
            ResultSet rs = st.executeQuery("SELECT * FROM karyawan WHERE id_user='"+userTF.getText().trim()+"'"); 
            if(rs.next()){
                setStatus(rs.getString("status"));
            }
            return getStatus();
            }catch (SQLException e) {
            System.err.println(e.getMessage());
            return null;
        }
    }
    
    //Getter & Setter
    public String getStatus() {
        return status;
    }
    public void setStatus(String status) {
        this.status = status;
    }
    public JTextField getUserTF() {
        return userTF;
    }
    public void setUserTF(JTextField userTF) {
        this.userTF = userTF;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new keeptoo.KGradientPanel();
        loginIC = new javax.swing.JLabel();
        userIC = new javax.swing.JLabel();
        userTF = new javax.swing.JTextField();
        passIC = new javax.swing.JLabel();
        passTF = new javax.swing.JPasswordField();
        loginBT = new javax.swing.JButton();
        spassBT = new javax.swing.JToggleButton();
        exitBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setMinimumSize(new java.awt.Dimension(400, 300));
        setUndecorated(true);
        setResizable(false);

        bg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        bg.setkEndColor(new java.awt.Color(0, 102, 0));
        bg.setkStartColor(new java.awt.Color(0, 0, 0));
        bg.setMaximumSize(new java.awt.Dimension(400, 300));
        bg.setMinimumSize(new java.awt.Dimension(400, 300));

        loginIC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginIC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/signin.png"))); // NOI18N

        userIC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/username.png"))); // NOI18N

        userTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userTF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        userTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userTFKeyPressed(evt);
            }
        });

        passIC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/password.png"))); // NOI18N

        passTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        passTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passTF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        passTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passTFKeyPressed(evt);
            }
        });

        loginBT.setBackground(new java.awt.Color(255, 255, 255));
        loginBT.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        loginBT.setForeground(new java.awt.Color(255, 255, 255));
        loginBT.setText("LOGIN");
        loginBT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        loginBT.setContentAreaFilled(false);
        loginBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginBTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginBTMouseExited(evt);
            }
        });
        loginBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBTActionPerformed(evt);
            }
        });

        spassBT.setBackground(new java.awt.Color(255, 255, 255));
        spassBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/spassB.png"))); // NOI18N
        spassBT.setContentAreaFilled(false);
        spassBT.setOpaque(true);
        spassBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spassBTActionPerformed(evt);
            }
        });

        exitBT.setBackground(new java.awt.Color(255, 255, 255));
        exitBT.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        exitBT.setForeground(new java.awt.Color(255, 255, 255));
        exitBT.setText("EXIT");
        exitBT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        exitBT.setContentAreaFilled(false);
        exitBT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitBTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitBTMouseExited(evt);
            }
        });
        exitBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginIC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userIC, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(passIC, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(passTF)
                                        .addGap(0, 0, 0)
                                        .addComponent(spassBT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(userTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(exitBT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(loginBT, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 66, Short.MAX_VALUE)))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(loginIC)
                .addGap(18, 18, 18)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userTF)
                    .addComponent(userIC))
                .addGap(18, 18, 18)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passIC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passTF)
                    .addComponent(spassBT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginBT, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBT, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginBTMouseEntered
        loginBT.setOpaque(true);
        loginBT.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_loginBTMouseEntered

    private void loginBTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginBTMouseExited
        loginBT.setOpaque(false);
        loginBT.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_loginBTMouseExited

    private void loginBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBTActionPerformed
        login();
    }//GEN-LAST:event_loginBTActionPerformed

    private void spassBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spassBTActionPerformed
        if(spassBT.isSelected()){
            passTF.setEchoChar((char)0);
            spassBT.setOpaque(true);
            spassBT.setBackground(new Color(0,0,0));
            spassBT.setIcon(new ImageIcon(getClass().getResource("/icon/spassW.png")));
        }else{
            passTF.setEchoChar('*');
            spassBT.setBackground(new Color(255,255,255));
            spassBT.setIcon(new ImageIcon(getClass().getResource("/icon/spassB.png")));
        }
    }//GEN-LAST:event_spassBTActionPerformed

    private void exitBTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBTMouseEntered
        exitBT.setOpaque(true);
        exitBT.setForeground(new Color(255,0,0));
    }//GEN-LAST:event_exitBTMouseEntered

    private void exitBTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBTMouseExited
        exitBT.setOpaque(false);
        exitBT.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_exitBTMouseExited

    private void exitBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin keluar?", "Keluar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {      
            System.exit(0);
        }
    }//GEN-LAST:event_exitBTActionPerformed

    private void passTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
    }//GEN-LAST:event_passTFKeyPressed

    private void userTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
    }//GEN-LAST:event_userTFKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormLoginT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormLoginT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormLoginT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormLoginT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormLoginT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel bg;
    private javax.swing.JButton exitBT;
    private javax.swing.JButton loginBT;
    private javax.swing.JLabel loginIC;
    private javax.swing.JLabel passIC;
    private javax.swing.JPasswordField passTF;
    private javax.swing.JToggleButton spassBT;
    private javax.swing.JLabel userIC;
    private javax.swing.JTextField userTF;
    // End of variables declaration//GEN-END:variables

}
